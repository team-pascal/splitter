openapi: "3.0.3"
info:
  title: Splitter API
  version: '1.0'
  description: |-
    This is a Splitter API
tags:
  - name: Groups
  - name: Users
  - name: Payments
paths:
  /groups:
    post:
      tags:
        - Groups
      description: |-
        Register the group and splitter members.
        For top page.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                users:
                  type: array
                  items:
                    type: string
            example:
              name: "Team 1"
              users: [
                "Alice",
                "Bob",
                "Charle",
                "Dave"
              ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: "#/components/schemas/Group"
                  users: 
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
              example:
                group:
                  id: "sSdaixpwYCCpeY4b"
                  name: "Team A"
                  created_at: 1714372101
                  deleted_at: null
                  updated_at: 1714372101
                users: [
                  {
                    id: "xVi3UAESJ9M2PntD",
                    group_id: "sSdaixpwYCCpeY4b",
                    name: "Alice",
                    created_at: 1714372101,
                    deleted_at: null,
                    updated_at: 1714372101
                  },
                  {
                    id: "c8GryJjwr863GwzH",
                    group_id: "sSdaixpwYCCpeY4b",
                    name: "Bob",
                    created_at: 1714372101,
                    deleted_at: null,
                    updated_at: 1714372101
                  },
                  {
                    id: "7RGnEXHHtrJxPemi",
                    group_id: "sSdaixpwYCCpeY4b",
                    name: "Charle",
                    created_at: 1714372101,
                    deleted_at: null,
                    updated_at: 1714372101
                  },
                  {
                    id: "VQFATEpJXAT_65Qk",
                    group_id: "sSdaixpwYCCpeY4b",
                    name: "Dave",
                    created_at: 1714372101,
                    deleted_at: null,
                    updated_at: 1714372101
                  }
                ]
        '400':
          description: Invalid group or users
        '422':
          description: Validation exception
  /groups/{id}:
    get:
      tags:
        - Groups
      description: |-
        Get information of group.
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Groups
      description: |-
        Change information of group.
      responses:
        '200':
          description: OK
  /users:
    post:
      tags:
        - Users
      description: |-
        Add an user.
      responses:
        '200':
          description: OK
  /users/{id}:
    get:
      tags:
        - Users
      description: |-
        Get information of an user.
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Users
      description: |-
        Delete an user.
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Users
      description: |-
        Update the information of an user.
      responses:
        '200':
          description: OK
  /payments:
    post:
      tags:
        - Payments
      description: |-
        Register the payment information.
      responses:
        '200':
          description: OK
  /payments/list:
    get:
      tags:
        - Payments
      description: |-
        Get the information of payments.
      responses:
        '200':
          description: OK
  /payments/{id}:
    get:
      tags:
        - Payments
      description: |-
        Get the information of payments.
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Payments
      description: |-
        Delete the information of payments.
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Payments
      description: |-
        Update the information of payments.
      responses:
        '200':
          description: OK
  /payments/done:
    post: 
      tags:
        - Payments
      description: |-
        Finish split money.
      responses:
        '200':
          description: OK
  /payments/doing:
    post: 
      tags:
        - Payments
      description: |-
        Unfinish split money.
      responses:
        '200':
          description: OK

components:
  schemas:
    Group:
      type: "object"
      properties:
        id:
          type: string
          example: "sSdaixpwYCCpeY4b"
        name:
          type: string
          example: Team A
        created_at:
          type: integer
          format: int64
          example: 1714372101
        deleted_at:
          type: integer
          format: int64
          example: 1714372101
        updated_at:
          type: integer
          format: int64
          example: 1714372101
    User:
      type: "object"
      properties:
        id:
          type: string
          example: "fU3r756xLhQLhmBu"
        group_id:
          type: string
          example: "sSdaixpwYCCpeY4b"
        name:
          type: string
          example: "Alice"
        created_at:
          type: integer
          format: int64
          example: 1714372101
        deleted_at:
          type: integer
          format: int64
          example: 1714372101
        updated_at:
          type: integer
          format: int64
          example: 1714372101
    Payment:
      type: "object"
      properties:
        id:
          type: string
          example: "S4fbP8dRVrwA-AiK"
        title:
          type: string
          example: "Burgers of Mickey D's"
        amount:
          type: integer
          example: 5300
        group_id:
          type: string
          example: "sSdaixpwYCCpeY4b"
        is_split:
          type: boolean
          example: true
        done:
          type: boolean
          example: false
        created_at:
          type: integer
          format: int64
          example: 1714372101
        deleted_at:
          type: integer
          format: int64
          example: null
        updated_at:
          type: integer
          format: int64
          example: 1714372101